# Name of submitter: JSR-160 Expert Group <jsr-160-comments&jcp.org>
# Language of service template: en
# Security considerations:
#    Java Specification Request (JSR) 160 defines a secure
#    configuration of the jmx:rmi connector, based on SSL socket
#    factories.
#    For further details please refer to JSR 160 specification
#    available at http://www.jcp.org/en/jsr/detail?id=160

template-type=jmx:rmi

template-version=1.0

template-description=
    This template describes the RMI Connector defined by JSR 160.
    More information on this connector can be obtained from the
    JSR 160 specification available from the JCP Home Page at:
        http://www.jcp.org/en/jsr/detail?id=160

template-url-syntax=
    url-path        =   jndi-path / stub-path
    stub-path       =   "/stub/" *xchar
      ;  serialized RMI stub encoded as BASE64 without newlines
    jndi-path       =   "/jndi/" *xchar
      ;  name understood by JNDI API, shows where RMI stub is stored
    ; The following rules are extracted from RFC 2609
    safe            =   "$" / "-" / "_" / "." / "~"
    extra           =   "!" / "*" / "'" / "(" / ")" / "," / "+"
    uchar           =   unreserved / escaped
    xchar           =   unreserved / reserved / escaped
    escaped         =   1*(`\' HEXDIG HEXDIG)
    reserved        =   ";" / "/" / "?" / ":" / "@" / "&" / "=" / "+"
    unreserved      =   ALPHA / DIGIT / safe / extra

# Examples of the stub form:
# service:jmx:rmi://myhost:9999/stub/rO0ABX<270 chars deleted>gAAAeA==
# service:jmx:rmi:///stub/rO0ABX<270 chars deleted>gAAAeA==
# This form contains the serialized form of the Java object representing
# the RMI stub, encoded in BASE64 without newlines.  It is generated by
# the connector server, and is not intended to be human-readable.
#
# Examples of the JNDI form:
# service:jmx:rmi://myhost:9999/jndi/ldap://namehost:389/a=b,c=d
# service:jmx:rmi:///jndi/ldap://namehost:389/a=b,c=d
# If the client has an appropriate JNDI configuration, it can use
# a URL such as this:
# service:jmx:rmi:///jndi/a=b,c=d
#
# In both the /stub/ and /jndi/ forms, the hostname and port number
# (myhost:9999 in the examples) are not used by the client and, if
# present, are essentially comments.  The connector server address
# is actually stored in the serialized stub (/stub/ form) or in the
# directory entry (/jndi/ form).
#
# For more information, see the JSR 160 specification, notably the
# package javax.management.remote.rmi.
