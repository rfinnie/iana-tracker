(registered 2018-05-22, last updated 2018-05-22)

Name: Amit Kumar Gupta
Email: amitgupta.gwl&gmail.com

Media type name: application

Media subtype name: vnd.nimn

Required parameters: N/A

Optional parameters: N/A

Encoding considerations: 8bit if UTF-8; binary if UTF-16 or UTF-32

Security considerations: Nimn data format in itself is not 
   executable. Data encoded to Nimn format may contain binary data, 
   regular expressions, scripting code, SQL queries etc. So the user 
   application should convert it first into the application object 
   instead of direct evaluation if they use the same format to 
   represent the executable code.

   Structure of the application object is not bundled with encoded 
   data. It needs to be provided externally. Hence if there is any 
   modification in structure of encoded data like extra data field 
   is inserted, existing data field is deleted, or if the sequence of 
   data field is changed in encoded data then Nimn encoder will 
   error out. 

   The nimn format does not provide confidentiality or integrity 
   protection. If these are need the user must insure the integrity 
   or confidentiality of nimn format data using some external 
    mechanism.

   Please check specification for more detail on Nimn format 
   supported characters.
   https://github.com/nimndata/spec/blob/master/SPEC.md

Interoperability considerations: N/A

Published specification:
   https://github.com/nimndata/spec/blob/master/SPEC.md

Applications which use this media: Any application can use Nimn 
   data format to exchange data between same or two different 
   applications.

Fragment identifier considerations: N/A

Restrictions on usage: none

Additional information:

   1. Deprecated alias names for this type: N/A
   2. Magic number(s): N/A
   3. File extension(s): nimn
   4. Macintosh file type code: N/A
   5. Object Identifiers: N/A

General Comments: Nimn is the dense format of data where the field 
   information is kept separate from the actual data. Boundary and 
   fixed value characters are used to identify the boundaries of 
   data and their structure. Encoded data is still readable, and 
   searchable. Field level encoding, character mapping, compression 
   or any other customization are not the part of Nimn specification.

   As the serialized form keeps only data and boundary characters, 
   object schema need to be given at the time of de-serialization. 
   It is required to map the data with correct fields in the 
   application object.

Person to contact for further information:

   1. Name: Amit Kumar Gupta
   2. Email: amitgupta.gwl&gmail.com

Intended usage: Common
   Any application can use nimn data format following the 
   specification.