(registered 2013-10-30, last updated 2013-10-30)

Name : Leonard Daly & Don Brutzman

Email : x3d-chair&web3d.org

MIME media type name : Model

MIME subtype name : Standards Tree - x3d+xml

Required parameters : None

Optional parameters :
None

Encoding considerations : binary


Security considerations :
A number of relevant references pertain to X3D model security, particularly 
RFC 4288, Media Type Specifications and Registration Procedures (Security 
Requirements) [http://tools.ietf.org/html/rfc4288#section-4.6].

* Complex media types: There are no X3D directives that access local resources 
except those related to the graphical display of content and the necessary 
system resources to make that happen. The X3D specification does allow for 
scripts to execute a variety of actions including changing the URL and accessing 
local resources. Any implementations that execute scripts MUST give 
consideration to their application's threat models and those of the individual 
features they implement; in particular, they MUST ensure that untrusted content 
is not executed in an unprotected environment.

* Active content: We are interpreting active content to mean any and all content 
that is not static and unchanging while the designated URL is displayed. The 
intent of X3D is to provide active content to the user. This requires system 
resources in the form of memory, CPU processing, and graphics processing. Users 
of X3D desire active and are aware of the system demands.

* Release of information: The X3D specification does not require any information 
be sent from the user's computer. A particular implementation may request 
information and distribute it. It is up to the implementer and user to negotiate 
the terms of service for that particular application.

* Decompression issues: Several activities can occur when loading an X3D scene 
that have security implications.
- X3D files can embed url links for loading other resources such as images, 
scripts, movies, audio files and other X3D scenes
- Embedded or linked scripts can be in Javascript, Java or (optionally) other 
languages
- Compressed binary scenes can contain two types of decompression: 
information-based (.gzip, Fast Infoset) and geometric-based (produces polygonal 
structures) which can be computationally expensive
- Recursive techniques are not typically allowed in 3D scene constructs
- Regular user-agent precautions used by Web browsers for HTML content should 
also apply

* External security considerations: There is nothing in the X3D specification 
that requires or prevents security assurances. A particular implementation may 
request information and distribute it. It is up to the implementer and user to 
negotiate the terms of service for that particular application.

Scripting is defined as being available for the specification. Two scripting 
languages are defined: ECMAScript and Java. Each scripting language is 
controlled by its local security model. As the content may run in many different 
situations, the X3D specification does not impose specific security policies. 
For example, some standalone applications will want to directly interact with 
the local file system, network or database, while others that run in a web 
browser would use the web-browser's security model.

X3D Graphics scenes can utilize the World Wide Web Consortium (W3C) Security 
Recommendations [http://www.w3.org/Security/] for XML Signature 
[http://www.w3.org/TR/xmldsig-core/] and XML Encryption 
[http://www.w3.org/TR/xmlenc-core/], in either the .x3d (plain text) and .x3db 
(compressed binary) encodings.

* Basic examples demonstrating use of the current W3C Recommendations for XML 
Signature and XML Encryption are maintained online at
- http://www.web3d.org/x3d/content/examples/Basic/Security
- http://www.web3d.org/x3d/content/examples/Basic/Security/X3dSecurityReadMe.html

X3D security considerations are a close match to HTML. JavaScript or Java 
scripts may be linked internal to an X3D scene, or external to an X3D scene by 
an encapsulating HTML browser. Relevant informational review references follow.

* HTML Mime Type Security Considerations [http://tools.ietf.org/html/rfc2854#section-7]
- Excerpt: In addition, the introduction of scripting languages and interactive 
capabilities in HTML 4.0 introduced a number of security risks associated with 
the automatic execution of programs written by the sender but interpreted by the 
recipient. User agents executing such scripts or programs must be extremely 
careful to insure that untrusted software is executed in a protected environment.

* HTML4 Recommendation, B.10 Notes on security [http://www.w3.org/TR/html401/appendix/notes.html#h-B.10]
- Excerpt: Anchors, embedded images, and all other elements that contain URIs as 
parameters may cause the URI to be dereferenced in response to user input. In 
this case, the security issues of [RFC1738 - http://tools.ietf.org/html/rfc1738], 
section 6, should be considered. The widely deployed methods for submitting form 
requests -- HTTP and SMTP -- provide little assurance of confidentiality. 
Information providers who request sensitive information via forms -- especially 
with the INPUT element, type="password" -- should be aware and make their users 
aware of the lack of confidentiality.

* HTML5 security references [http://www.w3.org/Security/wiki/HTML5]
- Details regarding specific HTML5 elements seem to be not applicable to X3D mime types


Interoperability considerations :


Published specification :
All revisions of the X3D specification is maintained online at 
http://www.web3d.org/realtime-3d/specification/all The most recent specification 
is available from the ISO website (for a fee) or from Web3D Consortium (without 
charge)

ISO/IEC 19776-1.2:2009 - XML Encoding
http://www.web3d.org/files/specifications/19776-1/V3.3/index.html [per ISO 
requirements, this is a frames definition page]


Applications which use this media :
The applications that use (or would use) the media type (model/x3d+xml) are 
those that display, create, edit, import, or export 3D model content using the 
X3D standard. A short list of the applications include:

* Blender (Open source, runs on Windows, Macintosh, Linux)
* BS Contact (from Bitmanagement, runs on Windows, Macintosh, Linux)
* Flux (from Media Machines, runs on Windows)
* FreeWRL (Open source, runs on Windows, Macintosh, Linux)
* Instant Reality (Fraunhofer, runs on Windows, Macintosh, Linux)
* Octaga VS Player (from Octaga VS, runs on Windows)
* Rawkee (Open source Maya exporter, runs in Maya)
* Vivaty (from Vivaty, runs on Windows, Flash based)
* X3D-Edit and X3D Validator (from Naval Postgraduate School, Java based)
* X3DOM (Open source, runs on Windows, Macintosh, Linux, iPad)
* Xj3D (Open source from Web3D Consortium, Java based)
* See X3D Resources (http://www.web3d.org/x3d/content/examples/X3dResources.html) 
for a comprehensive list of supporting applications

Additional information :

1. Magic number(s) : None
2. File extension(s) : x3d
3. Macintosh file type code : Text
4. Object Identifiers: None

The X3D standard is a continuation of the VRML standard that is defined in 
RFC2077. As part of this work, several large modifications were made to the file 
format and specification. The basic premise for the specification continues the 
VRML design rational. The MIME types and file extensions were changed to 
indicate this modified standard.

Content Sub-types

Each content type may have an additional Content-Encoding to indicate whether 
the content has been compressed using GZIP in addition to the basic textual 
encoding. This is also indicated by modifying each file extension with the 
character "z". For example, the plain text VRML-encoded file format would use 
the extension ".x3dv", and if compressed using GZIP uses the extension ".x3dvz"

Person to contact for further information :

1. Name : X3D Working Group Chairs (Leonard Daly & Don Brutzman)
2. Email : x3d-chair&web3d.org

Intended usage : Common


Author/Change controller : Web3D Consortium