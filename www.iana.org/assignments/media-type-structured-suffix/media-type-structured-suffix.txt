                                                          Structured Syntax Suffix Registry

   Created
           2012-07-20

   Last Updated
           2014-07-08

   Available Formats
           [IMG]
           XML [IMG]
           HTML [IMG]
           Plain text

   Registry included below

     * Structured Syntax Suffix Registry

Structured Syntax Suffix Registry

   Registration Procedure(s)

 Expert Review

   Expert(s)

 Ned Freed

   Reference
           [RFC6838]

   Available Formats
           [IMG]
           CSV

     Name        +suffix           References             Encoding      Interoperability      Fragment Identifier          Security              Contact         Author/Change Registration Modification
                                                       Considerations    Considerations         Considerations          Considerations                            Controller       Date       Date(s)
                                                                                         Registrations which use this
                                                                                         '+xml' convention MUST also
                                                                                         make reference to [RFC7303],
                                                                                         specifically Section 5, in
                                                                                         specifying fragment
                                                                                         identifier syntax and
                                                                                         semantics, and they MAY
                                                                                         restrict the syntax to a
                                                                                         specified subset of schemes,
                                                                                         except that they MUST NOT
                                                                                         disallow barenames or
                                                                                         'element' scheme pointers.
                                                                                         They MAY further require
                                                                                         support for other registered
                                                                                         schemes. They also MAY add
                                                                                         additional syntax (which MUST
                                                                                         NOT overlap with
                                                                                         [XPointerFramework] syntax)
                                                                                         together with associated
                                                                                         semantics, and MAY add
                                                                                         additional semantics for
                                                                                         barename XPointers which, as
                                                                                         provided for in Section 5,
                                                                                         will only apply when
                                                                                         [RFC7303] does not define an                                            The XML
                                                                                         interpretation.                                                         specification
                                                                                                                                                                 is a work
                                                                        Same as          In practice these constraints                                           product of
                                                                        [RFC7303],       imply that for a fragment                                               the World
                                                                        Section 9.1. See identifier addressed to an                                              Wide Web
  Extensible                                         Same as [RFC7303], above, and also  instance of a specific        See Section 10,   See Authors' Addresses  Consortium's
    Markup     +xml         [RFC7303]                Section 9.1.       Section 3, for   "xxx/yyy+xml" type, there are [RFC7303].        section, [RFC7303].     XML Core      2012-11-15   2014-04-17
Language (XML)                                                          guidelines on    three cases:                                                            Working
                                                                        the use of the                                                                           Group. The
                                                                        'charset'        For fragment identifiers                                                W3C has
                                                                        parameter.       matching the syntax defined                                             change
                                                                                         in [XPointerFramework], where                                           control over
                                                                                         the fragment identifier                                                 [RFC7303].
                                                                                         resolves per the rules
                                                                                         specified there, then process
                                                                                         as specified there;

                                                                                         For fragment identifiers
                                                                                         matching the syntax defined
                                                                                         in [XPointerFramework], where
                                                                                         the fragment identifier does
                                                                                         _not_ resolve per the rules
                                                                                         specified there, then process
                                                                                         as specified in
                                                                                         "xxx/yyy+xml";

                                                                                         For fragment identifiers
                                                                                         _not_ matching the syntax
                                                                                         defined in
                                                                                         [XPointerFramework], then
                                                                                         process as specified in "xxx/
                                                                                         yyy+xml". A fragment
                                                                                         identifier of the form
                                                                                         "xywh=160,120,320,240", as
                                                                                         defined in [MediaFrags],
                                                                                         which might be used in a URI
                                                                                         for an XML-encoded image,
                                                                                         would fall in this category.
                                                                                         The syntax and semantics of
                                                                                         fragment identifiers
                                                                                         specified for +json SHOULD be
                                                                                         as specified for
                                                                                         "application/json". (At
                                                     Per [RFC4627],                      publication of this document,
                                                     JSON is allowed to                  there is no fragment
                                                     be represented                      identification syntax defined
                                                     using UTF-8,                        for "application/json".) The
                                                     UTF-16, or UTF-32.                  syntax and semantics for                                                The Apps Area
  JavaScript                                         When JSON is                        fragment identifiers for a                                              Working
    Object                                           written in UTF-8,                   specific "xxx/yyy+json"                         Apps Area Working Group Group. IESG
   Notation    +json        [RFC4627][RFC6839]       JSON is 8bit       n/a              SHOULD be processed as        See [RFC4627].    (apps-discuss@ietf.org) has change    2012-11-27
    (JSON)                                           compatible                          follows: For cases defined in                                           control over
                                                     ([RFC2045]). When                   +json, where the fragment                                               this
                                                     JSON is written in                  identifier resolves per the                                             registration.
                                                     UTF-16 or UTF-32,                   +json rules, then as
                                                     JSON is binary                      specified in +json. For cases
                                                     ([RFC2045]).                        defined in +json, where the
                                                                                         fragment identifier does not
                                                                                         resolve per the +json rules,
                                                                                         then as specified in "xxx/
                                                                                         yyy+json". For cases not
                                                                                         defined in +json, then as
                                                                                         specified in "xxx/yyy+json".
                                                                                                                       Each individual
                                                                                                                       media type
                                                                                                                       registered with a
                                                                                                                       +ber suffix can
                                                                                                                       have additional
                                                                                                                       security
                                                                                                                       considerations.
                                                                                                                       BER has a
                                                                                                                       type-length-value
                                                                                                                       structure, and it
                                                                                         At publication of this        is easy to
                                                                                         document, there is no         construct
                                                                                         fragment identification       malicious content
                                                                                         syntax defined for +ber. The  with invalid
                                                                                         syntax and semantics for      length fields
                                                                                         fragment identifiers for a    that can cause
                                                                                         specific "xxx/yyy+ber" SHOULD buffer overrun                            The Apps Area
Basic Encoding                                                                           be processed as follows: For  conditions. BER                           Working
 Rules (BER)                                                                             cases defined in +ber, where  allows for                                Group. IESG
   message     +ber         [ITU.X690.2008][RFC6839] BER is a binary    n/a              the fragment identifier       arbitrary levels  Apps Area Working Group has change    2012-11-27
   transfer                                          encoding.                           resolves per the +ber rules,  of nesting, which (apps-discuss@ietf.org) control over
    syntax                                                                               then as specified in +ber.    may make it                               this
                                                                                         For cases defined in +ber,    possible to                               registration.
                                                                                         where the fragment identifier construct
                                                                                         does not resolve per the +ber malicious content
                                                                                         rules, then as specified in   that will cause a
                                                                                         "xxx/ yyy+ber". For cases not stack overflow.
                                                                                         defined in +ber, then as      Interpreters of
                                                                                         specified in "xxx/yyy+ber".   the BER
                                                                                                                       structures should
                                                                                                                       be aware of these
                                                                                                                       issues and should
                                                                                                                       take appropriate
                                                                                                                       measures to guard
                                                                                                                       against buffer
                                                                                                                       overflows and
                                                                                                                       stack overruns in
                                                                                                                       particular and
                                                                                                                       malicious content
                                                                                                                       in general.
                                                                                         The syntax and semantics of
                                                                                         fragment identifiers
                                                                                         specified for +cbor SHOULD be
                                                                                         as specified for
                                                                                         "application/cbor". (At
                                                                                         publication of this document,
                                                                                         there is no fragment
                                                                                         identification syntax defined
                                                                                         for "application/cbor".) The
                                                                                         syntax and semantics for                                                The Apps Area
                                                                                         fragment identifiers for a                                              Working
Concise Binary                                                                           specific "xxx/yyy+cbor"                         Apps Area Working Group Group. IESG
    Object     +cbor        [RFC7049]                CBOR is a binary   n/a              SHOULD be processed as        See Section 8 of  (apps-discuss at        has change    2013-09-19
Representation                                       format.                             follows: For cases defined in [RFC7049]         ietf.org)               control over
    (CBOR)                                                                               +cbor, where the fragment                                               this
                                                                                         identifier resolves per the                                             registration.
                                                                                         +cbor rules, then process as
                                                                                         specified in +cbor. For cases
                                                                                         defined in +cbor, where the
                                                                                         fragment identifier does not
                                                                                         resolve per the +cbor rules,
                                                                                         then process as specified in
                                                                                         "xxx/yyy+cbor". For cases not
                                                                                         defined in +cbor, then
                                                                                         process as specified in
                                                                                         "xxx/yyy+cbor".
                                                                                                                       Each individual
                                                                                                                       media type
                                                                                                                       registered with a
                                                                                                                       +der suffix can
                                                                                                                       have additional
                                                                                                                       security
                                                                                                                       considerations.
                                                                                                                       DER has a
                                                                                                                       type-length-value
                                                                                                                       structure, and it
                                                                                         At publication of this        is easy to
                                                                                         document, there is no         construct
                                                                                         fragment identification       malicious content
                                                                                         syntax defined for +der. The  with invalid
                                                                                         syntax and semantics for      length fields
                                                                                         fragment identifiers for a    that can cause
                                                                                         specific "xxx/yyy+der" SHOULD buffer overrun                            The Apps Area
Distinguished                                                                            be processed as follows: For  conditions. DER                           Working
Encoding Rules                                                                           cases defined in +der, where  allows for                                Group. IESG
(DER) message  +der         [ITU.X690.2008][RFC6839] DER is a binary    n/a              the fragment identifier       arbitrary levels  Apps Area Working Group has change    2012-11-27
   transfer                                          encoding.                           resolves per the +der rules,  of nesting, which (apps-discuss@ietf.org) control over
    syntax                                                                               then as specified in +der.    may make it                               this
                                                                                         For cases defined in +der,    possible to                               registration.
                                                                                         where the fragment identifier construct
                                                                                         does not resolve per the +der malicious content
                                                                                         rules, then as specified in   that will cause a
                                                                                         "xxx/ yyy+der". For cases not stack overflow.
                                                                                         defined in +der, then as      Interpreters of
                                                                                         specified in "xxx/yyy+der".   the DER
                                                                                                                       structures should
                                                                                                                       be aware of these
                                                                                                                       issues and should
                                                                                                                       take appropriate
                                                                                                                       measures to guard
                                                                                                                       against buffer
                                                                                                                       overflows and
                                                                                                                       stack overruns in
                                                                                                                       particular and
                                                                                                                       malicious content
                                                                                                                       in general.
                                                                                         The syntax and semantics of
                                                                                         fragment identifiers
                                                                                         specified for +fastinfoset
                                                                                         SHOULD be as specified for
                                                                                         "application/fastinfoset".
                                                                                         (At publication of this
                                                                                         document, there is no
                                                                                         fragment identification
                                                                                         syntax defined for
                                                                                         "application/fastinfoset".)   There are no
                                                     Fast Infoset is a                   The syntax and semantics for  security
                                                     binary encoding.                    fragment identifiers for a    considerations
                                                     The binary,                         specific "xxx/                inherent in Fast                          The Apps Area
                                                     quoted-printable                    yyy+fastinfoset" SHOULD be    Infoset. Each                             Working
 Fast Infoset                                        and base64                          processed as follows: For     individual media  Apps Area Working Group Group. IESG
   document    +fastinfoset [ITU.X891.2005][RFC6839] content-           n/a              cases defined in              type registered   (apps-discuss@ietf.org) has change    2012-11-27
    format                                           transfer-encodings                  +fastinfoset, where the       with a                                    control over
                                                     are suitable for                    fragment identifier resolves  +fastinfoset                              this
                                                     use with Fast                       per the +fastinfoset rules,   suffix can have                           registration.
                                                     Infoset.                            then as specified in          additional
                                                                                         +fastinfoset. For cases       security
                                                                                         defined in +fastinfoset,      considerations.
                                                                                         where the fragment identifier
                                                                                         does not resolve per the
                                                                                         +fastinfoset rules, then as
                                                                                         specified in
                                                                                         "xxx/yyy+fastinfoset". For
                                                                                         cases not defined in
                                                                                         +fastinfoset, then as
                                                                                         specified in
                                                                                         "xxx/yyy+fastinfoset".
                                                                                         The syntax and semantics of
                                                                                         fragment identifiers
                                                                                         specified for +wbxml SHOULD
                                                                                         be as specified for
                                                                                         "application/vnd.wap.wbxml".
                                                                                         (At publication of this
                                                                                         document, there is no
                                                                                         fragment identification       There are no
                                                                                         syntax defined for            security
                                                                                         "application/vnd.wap.wbxml".) considerations
                            [Open Mobile Alliance,                                       The syntax and semantics for  inherent in                               The Apps Area
WAP Binary XML              "Binary XML Content                                          fragment identifiers for a    WBXML. Each                               Working
   (WBXML)                  Format Specification",   WBXML is a binary                   specific "xxx/yyy+wbxml"      individual media  Apps Area Working Group Group. IESG
   document    +wbxml       OMA Wireless Access      encoding.          n/a              SHOULD be processed as        type registered   (apps-discuss@ietf.org) has change    2012-11-27
    format                  Protocol WAP-192-                                            follows: For cases defined in with a +wbxml                             control over
                            WBXML-20010725-a, July                                       +wbxml, where the fragment    suffix can have                           this
                            2001.][RFC6839]                                              identifier resolves per the   additional                                registration.
                                                                                         +wbxml rules, then as         security
                                                                                         specified in +wbxml. For      considerations.
                                                                                         cases defined in +wbxml,
                                                                                         where the fragment identifier
                                                                                         does not resolve per the
                                                                                         +wbxml rules, then as
                                                                                         specified in "xxx/yyy+wbxml".
                                                                                         For cases not defined in
                                                                                         +wbxml, then as specified in
                                                                                         "xxx/yyy+wbxml".
                                                                                         The syntax and semantics of
                                                                                         fragment identifiers
                                                                                         specified for +zip SHOULD be
                                                                                         as specified for              ZIP files support
                                                                                         "application/zip". (At        two forms of
                                                                                         publication of this document, encryption:
                                                                                         there is no fragment          Strong Encryption
                                                                                         identification syntax defined and AES 128-bit,
                            [PKWARE, Inc.,                                               for "application/zip".) The   192-bit and                               The Apps Area
                            "APPNOTE.TXT - .ZIP File                                     syntax and semantics for      256-bit                                   Working
   ZIP file                 Format Specification",                                       fragment identifiers for a    encryption; see                           Group. IESG
 storage and   +zip         PKWARE .ZIP File Format  ZIP is a binary    n/a              specific "xxx/yyy+zip" SHOULD the specification Apps Area Working Group has change    2012-11-27
   transfer                 Specification - Version  encoding.                           be processed as follows: For  for further       (apps-discuss@ietf.org) control over
    format                  6.3.2, September                                             cases defined in +zip, where  details. Each                             this
                            2007.][RFC6839]                                              the fragment identifier       individual media                          registration.
                                                                                         resolves per the +zip rules,  type registered
                                                                                         then as specified in +zip.    with a +zip
                                                                                         For cases defined in +zip,    suffix can have
                                                                                         where the fragment identifier additional
                                                                                         does not resolve per the +zip security
                                                                                         rules, then as specified in   considerations.
                                                                                         "xxx/ yyy+zip". For cases not
                                                                                         defined in +zip, then as
                                                                                         specified in "xxx/yyy+zip".
